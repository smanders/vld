cmake_minimum_required(VERSION 3.0)
project(vld)
if(CMAKE_CONFIGURATION_TYPES)
  set(CMAKE_CONFIGURATION_TYPES Release CACHE STRING
    "Set the configurations to what we need" FORCE)
endif()
include_external_msproject(vld ${CMAKE_CURRENT_SOURCE_DIR}/vld.vcxproj)
#######################################
# install
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
  set(NUMBITS 64)
elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
  set(NUMBITS 32)
else()
  message(SEND_ERROR "vld cmake: NUMBITS not 64 or 32...")
endif()
if(${CMAKE_GENERATOR} MATCHES "Win64$")
  set(dbghelp setup/dbghelp/x64/dbghelp.dll)
  set(manifest setup/dbghelp/x64/Microsoft.DTfW.DHL.manifest)
  set(outdirlib bin/x64/Release/vld.lib)
  set(outdirdll bin/x64/Release/vld_x64.dll)
else()
  set(dbghelp setup/dbghelp/x86/dbghelp.dll)
  set(manifest setup/dbghelp/x86/Microsoft.DTfW.DHL.manifest)
  set(outdirlib bin/Win32/Release/vld.lib)
  set(outdirdll bin/Win32/Release/vld_x86.dll)
endif()
if(MSVC)
  install(PROGRAMS ${dbghelp} ${outdirlib} ${outdirdll} DESTINATION lib${NUMBITS})
  install(FILES ${manifest} DESTINATION lib${NUMBITS})
endif()
install(FILES vld.h vld_def.h vld.ini vldrt.cmake DESTINATION include/visualleakdetector)
